{"version":3,"file":"static/js/Cast.ee4ec941.chunk.js","mappings":"+NAqDA,UAhDa,SAAAA,GACX,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QAER,GAAwBE,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAA8BJ,EAAAA,EAAAA,WAAS,GAAvC,eAAOK,EAAP,KAAgBC,EAAhB,KAkBA,OAhBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,mCAAG,oGAEdF,GAAW,GAFG,UAGIG,EAAAA,EAAAA,IAAmBX,GAHvB,OAGRY,EAHQ,OAKdR,EAAQQ,GALM,gDAOdN,EAAS,kCAPK,yBASdE,GAAW,GATG,4EAAH,qDAYfE,MACC,CAACV,KAGF,gCACGO,GAAW,aACXF,IAAS,yBAAMA,KAChB,wBACGF,EAAKU,KAAI,SAAAC,GAER,OACE,2BACE,gBACEC,IAAG,yCAAoCD,EAASE,cAChDC,IAAG,UAAKH,EAASI,KAAd,gBAEL,4BACE,kCAAUJ,EAASI,SACnB,uCAAeJ,EAASK,kBAPnBL,EAASf,c,0MChCxBqB,EAAU,mCAChBC,IAAAA,SAAAA,QAAyB,+BAEzB,IAAMC,EACM,uBADNA,EAES,gBAFTA,EAGU,SAHVA,EAIU,WAJVA,EAKU,WAGHC,EAAS,mCAAG,yGAAOC,EAAP,+BAAc,EAAd,SACLH,IAAAA,IAAA,UACbC,EADa,oBACkBF,EADlB,iBACkCI,EADlC,wCADK,cACjBZ,EADiB,yBAMhBA,EAAIa,KAAKC,SANO,2CAAH,qDAUTC,EAAY,mCAAG,WAAOC,GAAP,4FAAcJ,EAAd,+BAAqB,EAArB,SACRH,IAAAA,IAAA,UACbC,EADa,oBACqBF,EADrB,iBACqCI,EADrC,kBACmDI,EADnD,wCADQ,cACpBhB,EADoB,OAI1BiB,QAAQC,IAAIlB,EAAIa,KAAKC,SAJK,kBAKnBd,EAAIa,KAAKC,SALU,2CAAH,sDASZK,EAAkB,mCAAG,WAAMhC,GAAN,uFAEdsB,IAAAA,IAAA,UACbC,EADa,YACcvB,EADd,oBAC4BqB,EAD5B,oBAFc,cAE1BR,EAF0B,yBAOzBA,EAAIa,MAPqB,2CAAH,sDAWlBd,EAAkB,mCAAG,yGAAOZ,EAAP,+BAAY,GAAZ,SACdsB,IAAAA,IAAA,iBAENtB,GAFM,OAEDuB,EAFC,oBAEkCF,EAFlC,oBADc,cAC1BR,EAD0B,OAKhCiB,QAAQC,IAAIlB,GALoB,kBAMzBA,EAAIa,KAAKtB,MANgB,2CAAH,qDAS/BQ,EAAmB,IAIZ,IAAMqB,EAAkB,mCAAG,WAAOjC,GAAP,4FAAWyB,EAAX,+BAAkB,EAAlB,SACdH,IAAAA,IAAA,iBACNtB,GADM,OACDuB,EADC,oBACkCF,EADlC,gCACiEI,IAFnD,cAC1BZ,EAD0B,OAKhCiB,QAAQC,IAAIlB,EAAIa,KAAKC,SALW,kBAMzBd,EAAIa,KAAKC,SANgB,2CAAH","sources":["components/Cast/Cast.js","services/movies-api.js"],"sourcesContent":["// img, name, character (list)\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchMoviesCredits } from 'services/movies-api';\n\nconst Cast = id => {\n  const { movieId } = useParams();\n\n  const [cast, setCast] = useState([]);\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    const fetchCast = async () => {\n      try {\n        setLoading(true);\n        const res = await fetchMoviesCredits(movieId);\n        // const normData = res.slice(0, 5);\n        setCast(res);\n      } catch (error) {\n        setError('Ooops. Something went wrong...');\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchCast();\n  }, [movieId]);\n\n  return (\n    <>\n      {loading && 'Loading...'}\n      {error && <div>{error}</div>}\n      <ul>\n        {cast.map(castItem => {\n          //   console.log(castItem);\n          return (\n            <li key={castItem.id}>\n              <img\n                src={`https://image.tmdb.org/t/p/w300${castItem.profile_path}`}\n                alt={`${castItem.name} portrait`}\n              />\n              <div>\n                <p>Name: {castItem.name}</p>\n                <p>Character: {castItem.character}</p>\n              </div>\n            </li>\n          );\n        })}\n      </ul>\n    </>\n  );\n};\n\nexport default Cast;\n","import axios from 'axios';\n\n// https://api.themoviedb.org/3/movie/550?api_key=e744dd987f832ad945563dbad49387aa\n\nconst API_KEY = 'e744dd987f832ad945563dbad49387aa';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nconst END_POINTS = {\n  trending: '/trending/movie/week',\n  querySearch: '/search/movie',\n  movieDetails: '/movie',\n  movieCredits: '/credits',\n  movieReviews: '/reviews',\n};\n\nexport const getMovies = async (page = 1) => {\n  const res = await axios.get(\n    `${END_POINTS.trending}?api_key=${API_KEY}&page=${page}&language=en-US&include_adult=false`\n    // `/trending/movie/week?api_key=${API_KEY}&page=${page}`\n  );\n  // console.log(res.data.results);\n  return res.data.results;\n};\n\n//  https://api.themoviedb.org/3/search/movie?api_key=<<api_key>>&language=en-US&page=1&include_adult=false\nexport const fetchByQuery = async (query, page = 1) => {\n  const res = await axios.get(\n    `${END_POINTS.querySearch}?api_key=${API_KEY}&page=${page}&query=${query}&language=en-US&include_adult=false`\n  );\n  console.log(res.data.results);\n  return res.data.results;\n};\n\n// https://api.themoviedb.org/3/movie/{movie_id}?api_key=<<api_key>>&language=en-US\nexport const fetchMoviesDetails = async id => {\n  // console.log(id);\n  const res = await axios.get(\n    `${END_POINTS.movieDetails}/${id}?api_key=${API_KEY}&language=en-US`\n  );\n  // console.log(res.data.results);\n  // console.log(res.data);\n  return res.data;\n};\n\n// https://api.themoviedb.org/3/movie/{movie_id}/credits?api_key=<<api_key>>&language=en-US\nexport const fetchMoviesCredits = async (id = 11) => {\n  const res = await axios.get(\n    // `/movie/${id}${END_POINTS.movieCredits}?api_key=${API_KEY}&language=en-US`\n    `/movie/${id}${END_POINTS.movieCredits}?api_key=${API_KEY}&language=en-US`\n  );\n  console.log(res);\n  return res.data.cast;\n};\n\nfetchMoviesCredits(11);\n\n// https://api.themoviedb.org/3/movie/{movie_id}/reviews?api_key=<<api_key>>&language=en-US&page=1\n\nexport const fetchMoviesReviews = async (id, page = 1) => {\n  const res = await axios.get(\n    `/movie/${id}${END_POINTS.movieReviews}?api_key=${API_KEY}&language=en-US&page=${page}`\n    // `/movie/${id}${END_POINTS.movieReviews}?api_key=${API_KEY}&language=en-US&page=${page}`\n  );\n  console.log(res.data.results);\n  return res.data.results;\n};\n\n// fetchMoviesReviews(11);\n\n// export const normalizeQuery = query =>\n//   query.toLowerCase().trim().split(' ').join('+');\n\n// export const normalizeMovieDetails = data => ({\n//   ...data,\n//   poster_path: data.poster_path\n//     ? `https://image.tmdb.org/t/p/w500/${data.poster_path}`\n//     : notFoundImageurl,\n// });\n// Реалізація на fetch\n// const BASE_URL = '';\n\n// async function fetchWithErrorHandling(url = '', config = {}) {\n//   const response = await fetch(url, config);\n//   return response.ok\n//     ? await response.json()\n//     : Promise.reject(new Error('The movie not found'));\n// }\n\n// export function fetchTrendingMovies() {\n//   return fetchWithErrorHandling(`${BASE_URL}/trending/get-trending`);\n// }\n\n// export function fetchByQuery() {\n//   return fetchWithErrorHandling(`${BASE_URL}/search/search-movies`);\n// }\n\n// datails, credits, reviews\n// export function fetchMoviesDetails() {}\n"],"names":["id","movieId","useParams","useState","cast","setCast","error","setError","loading","setLoading","useEffect","fetchCast","fetchMoviesCredits","res","map","castItem","src","profile_path","alt","name","character","API_KEY","axios","END_POINTS","getMovies","page","data","results","fetchByQuery","query","console","log","fetchMoviesDetails","fetchMoviesReviews"],"sourceRoot":""}