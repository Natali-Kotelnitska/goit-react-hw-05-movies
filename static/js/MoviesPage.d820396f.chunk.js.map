{"version":3,"file":"static/js/MoviesPage.d820396f.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-05-movies/./src/components/MoviesPage/MoviesPage.module.css?564c","components/MoviesPage/MoviesPage.js","webpack://goit-react-hw-05-movies/./src/components/Pageheading/PageHeading.module.css?fc51","components/Pageheading/Pageheading.js","components/TrendingMovies/MovieList.jsx","services/movies-api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"searchForm\":\"MoviesPage_searchForm__bufBH\",\"searchInput\":\"MoviesPage_searchInput__ejfTW\",\"searchButton\":\"MoviesPage_searchButton__jm-oy\"};","import s from './MoviesPage.module.css';\nimport Container from 'components/Container/Container';\nimport MovieList from 'components/TrendingMovies/MovieList';\nimport { useEffect, useState } from 'react';\nimport { fetchByQuery } from 'services/movies-api';\nimport PageHeading from 'components/Pageheading/Pageheading';\nconst SearchBar = () => {\n  const [searchQuery, setSearchQuery] = useState('');\n  const [movies, setMovies] = useState('');\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState('');\n\n  // const normalizedQuery = () =>\n  //   searchQuery.toLowerCase().trim().split(' ').join('+');\n\n  const handleQuerySearch = e => {\n    setSearchQuery(e.target.value.toLowerCase());\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (searchQuery.trim() === '') {\n      // setSearchQuery('');\n      alert('Enter the film title');\n    }\n\n    setSearchQuery('');\n  };\n\n  useEffect(() => {\n    if (!searchQuery) return;\n    setMovies([]);\n    const fetchMovie = () => {\n      setLoading(true);\n      fetchByQuery(searchQuery)\n        .then(results => {\n          setMovies(results);\n          // setMovies(prevState => [...prevState, ...results]);\n        })\n        .catch(error => {\n          setError('Ooops. Something went wrong...');\n          console.log(error);\n        })\n        .finally(setLoading(false));\n    };\n    fetchMovie();\n  }, [searchQuery]);\n\n  return (\n    <>\n      <Container>\n        <PageHeading text={'Movie Search'} />\n        {/* <h1>Movies search</h1> */}\n        {loading && 'Loading ...'}\n        {error && <div>{error}</div>}\n        <form onSubmit={handleSubmit} className={s.searchForm}>\n          <input\n            type=\"text\"\n            name=\"searchQuery\"\n            value={searchQuery}\n            autoComplete=\"off\"\n            autoFocus\n            placeholder=\"Search ...\"\n            onChange={handleQuerySearch}\n            className={s.searchInput}\n          />\n          <button type=\"submit\" className={s.searchButton}>\n            Search\n          </button>\n        </form>\n        {movies && <MovieList movies={movies} />}\n      </Container>\n    </>\n  );\n};\n\nexport default SearchBar;\n","// extracted by mini-css-extract-plugin\nexport default {\"title\":\"PageHeading_title__whdE-\"};","import s from './PageHeading.module.css';\n\nexport default function PageHeading({ text }) {\n  return <h1 className={s.title}>{text}</h1>;\n}\n","import PropTypes from 'prop-types';\nimport { Link, useLocation } from 'react-router-dom';\n\nconst MovieList = ({ movies }) => {\n  const location = useLocation();\n  console.log(location.pathname);\n  return (\n    <>\n      <ul>\n        {movies.map(({ id, original_title }) => (\n          <li key={id}>\n            <Link to={`/movies/${id}`} state={{ from: location.pathname }}>\n              {/* <Link to={`${id}`}> */}\n              <h3>{original_title}</h3>\n            </Link>\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n};\n\nMovieList.propTypes = {\n  movies: PropTypes.arrayOf(PropTypes.shape()).isRequired,\n};\nexport default MovieList;\n","import axios from 'axios';\n\n// https://api.themoviedb.org/3/movie/550?api_key=e744dd987f832ad945563dbad49387aa\n\nconst API_KEY = 'e744dd987f832ad945563dbad49387aa';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nconst END_POINTS = {\n  trending: '/trending/movie/week',\n  querySearch: '/search/movie',\n  movieDetails: '/movie',\n  movieCredits: '/credits',\n  movieReviews: '/reviews',\n};\n\nexport const getMovies = async (page = 1) => {\n  const res = await axios.get(\n    `${END_POINTS.trending}?api_key=${API_KEY}&page=${page}&language=en-US&include_adult=false`\n    // `/trending/movie/week?api_key=${API_KEY}&page=${page}`\n  );\n  // console.log(res.data.results);\n  return res.data.results;\n};\n\n//  https://api.themoviedb.org/3/search/movie?api_key=<<api_key>>&language=en-US&page=1&include_adult=false\nexport const fetchByQuery = async (query, page = 1) => {\n  const res = await axios.get(\n    `${END_POINTS.querySearch}?api_key=${API_KEY}&page=${page}&query=${query}&language=en-US&include_adult=false`\n  );\n  console.log(res.data.results);\n  return res.data.results;\n};\n\n// https://api.themoviedb.org/3/movie/{movie_id}?api_key=<<api_key>>&language=en-US\nexport const fetchMoviesDetails = async id => {\n  // console.log(id);\n  const res = await axios.get(\n    `${END_POINTS.movieDetails}/${id}?api_key=${API_KEY}&language=en-US`\n  );\n  // console.log(res.data.results);\n  // console.log(res.data);\n  return res.data;\n};\n\n// https://api.themoviedb.org/3/movie/{movie_id}/credits?api_key=<<api_key>>&language=en-US\nexport const fetchMoviesCredits = async id => {\n  const res = await axios.get(\n    // `/movie/${id}${END_POINTS.movieCredits}?api_key=${API_KEY}&language=en-US`\n    `/movie/${id}${END_POINTS.movieCredits}?api_key=${API_KEY}&language=en-US`\n  );\n  // console.log(res);\n  return res.data.cast;\n};\n\n// fetchMoviesCredits(11);\n\n// https://api.themoviedb.org/3/movie/{movie_id}/reviews?api_key=<<api_key>>&language=en-US&page=1\n\nexport const fetchMoviesReviews = async (id, page = 1) => {\n  const res = await axios.get(\n    `/movie/${id}${END_POINTS.movieReviews}?api_key=${API_KEY}&language=en-US&page=${page}`\n    // `/movie/${id}${END_POINTS.movieReviews}?api_key=${API_KEY}&language=en-US&page=${page}`\n  );\n  console.log(res.data.results);\n  return res.data.results;\n};\n\n// fetchMoviesReviews(11);\n\n// export const normalizeQuery = query =>\n//   query.toLowerCase().trim().split(' ').join('+');\n\n// export const normalizeMovieDetails = data => ({\n//   ...data,\n//   poster_path: data.poster_path\n//     ? `https://image.tmdb.org/t/p/w500/${data.poster_path}`\n//     : notFoundImageurl,\n// });\n// Реалізація на fetch\n// const BASE_URL = '';\n\n// async function fetchWithErrorHandling(url = '', config = {}) {\n//   const response = await fetch(url, config);\n//   return response.ok\n//     ? await response.json()\n//     : Promise.reject(new Error('The movie not found'));\n// }\n\n// export function fetchTrendingMovies() {\n//   return fetchWithErrorHandling(`${BASE_URL}/trending/get-trending`);\n// }\n\n// export function fetchByQuery() {\n//   return fetchWithErrorHandling(`${BASE_URL}/search/search-movies`);\n// }\n\n// datails, credits, reviews\n// export function fetchMoviesDetails() {}\n"],"names":["useState","searchQuery","setSearchQuery","movies","setMovies","error","setError","loading","setLoading","useEffect","fetchByQuery","then","results","catch","console","log","finally","Container","text","onSubmit","e","preventDefault","trim","alert","className","s","type","name","value","autoComplete","autoFocus","placeholder","onChange","target","toLowerCase","MovieList","PageHeading","location","useLocation","pathname","map","id","original_title","to","state","from","API_KEY","axios","END_POINTS","getMovies","page","res","data","query","fetchMoviesDetails","fetchMoviesCredits","cast","fetchMoviesReviews"],"sourceRoot":""}