{"version":3,"file":"static/js/MovieDetailsPage.d90925b2.chunk.js","mappings":"uKACA,MAA4B,6B,SCCb,SAASA,EAAT,GAAkC,IAAbC,EAAY,EAAZA,SAClC,OAAO,gBAAKC,UAAWC,EAAhB,SAAmCF,M,0ICK7B,SAASG,IACtB,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA0BE,EAAAA,EAAAA,UAAS,MAAnC,eAAOC,EAAP,KAAcC,EAAd,KACAC,QAAQC,IAAIN,IAEZO,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAmBR,GAASS,MAAK,SAAAC,GAE/BN,EAASM,QAEV,CAACV,IAIJ,OACE,+BACE,UAAC,IAAD,YACE,yCACA,yCACCG,IACC,4BACE,gBACEQ,IAAG,0CAAqCR,EAAMS,aAC9CC,IAAKV,EAAMW,SAEb,wBAAKX,EAAMW,SACX,6BAdY,IAAIC,KAAKZ,EAAMa,cAAcC,cAczC,QACA,wCAAgBd,EAAMe,eACtB,iBAAKrB,UAAU,iBAAf,WACE,sCACA,uBAAIM,EAAMgB,eAEZ,0BACE,wCAKN,mBACA,4BACE,oDACA,SAAC,KAAD,CAAMC,GAAE,kBAAapB,EAAb,YAAR,UACE,sCAGF,SAAC,KAAD,CAAMoB,GAAE,kBAAapB,EAAb,SAAR,UACE,mCAEF,mBACA,SAAC,KAAD,QAMF,yB,0MC3DFqB,EAAU,mCAChBC,IAAAA,SAAAA,QAAyB,+BAEzB,IAAMC,EACM,uBADNA,EAES,gBAFTA,EAGU,SAHVA,EAIU,WAJVA,EAKU,WAGHC,EAAS,mCAAG,yGAAOC,EAAP,+BAAc,EAAd,SACLH,IAAAA,IAAA,UACbC,EADa,oBACkBF,EADlB,iBACkCI,EADlC,wCADK,cACjBf,EADiB,yBAMhBA,EAAIgB,KAAKC,SANO,2CAAH,qDAUTC,EAAY,mCAAG,WAAOC,GAAP,4FAAcJ,EAAd,+BAAqB,EAArB,SACRH,IAAAA,IAAA,UACbC,EADa,oBACqBF,EADrB,iBACqCI,EADrC,kBACmDI,EADnD,wCADQ,cACpBnB,EADoB,OAI1BL,QAAQC,IAAII,EAAIgB,KAAKC,SAJK,kBAKnBjB,EAAIgB,KAAKC,SALU,2CAAH,sDASZnB,EAAkB,mCAAG,WAAMsB,GAAN,uFAEdR,IAAAA,IAAA,UACbC,EADa,YACcO,EADd,oBAC4BT,EAD5B,oBAFc,cAE1BX,EAF0B,yBAOzBA,EAAIgB,MAPqB,2CAAH,sDAWlBK,EAAkB,mCAAG,yGAAOD,EAAP,+BAAY,GAAZ,SACdR,IAAAA,IAAA,iBAENQ,GAFM,OAEDP,EAFC,oBAEkCF,EAFlC,oBADc,cAC1BX,EAD0B,OAKhCL,QAAQC,IAAII,GALoB,kBAMzBA,EAAIgB,KAAKM,MANgB,2CAAH,qDAS/BD,EAAmB,IAIZ,IAAME,EAAkB,mCAAG,WAAOH,GAAP,4FAAWL,EAAX,+BAAkB,EAAlB,SACdH,IAAAA,IAAA,iBACNQ,GADM,OACDP,EADC,oBACkCF,EADlC,gCACiEI,IAFnD,cAC1Bf,EAD0B,OAKhCL,QAAQC,IAAII,EAAIgB,KAAKC,SALW,kBAMzBjB,EAAIgB,KAAKC,SANgB,2CAAH","sources":["webpack://goit-react-hw-05-movies/./src/components/Container/Container.module.css?9f71","components/Container/Container.js","components/MovieDetailsPage/MovieDetailsPage.js","services/movies-api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Container_container__VVOCq\"};","import styles from './Container.module.css';\n\nexport default function Container({ children }) {\n  return <div className={styles.container}>{children}</div>;\n}\n","// import Container from 'components/Container/Container';\n\nimport Container from 'components/Container/Container';\nimport { useEffect, useState } from 'react';\nimport { Link, Outlet } from 'react-router-dom';\nimport { useParams } from 'react-router-dom';\nimport { fetchMoviesDetails } from 'services/movies-api';\n\nexport default function MovieDetailsPage() {\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState(null);\n  console.log(movieId);\n\n  useEffect(() => {\n    fetchMoviesDetails(movieId).then(res => {\n      // console.log(res);\n      setMovie(res);\n    });\n  }, [movieId]);\n\n  const getYear = () => new Date(movie.release_date).getFullYear();\n\n  return (\n    <>\n      <Container>\n        <button>Go back</button>\n        <h2>Movie Review</h2>\n        {movie && (\n          <div>\n            <img\n              src={`https://image.tmdb.org/t/p/w200/${movie.poster_path}`}\n              alt={movie.title}\n            />\n            <h3>{movie.title}</h3>\n            <p>({getYear()})</p>\n            <p>User Score: {movie.popularity}</p>\n            <div className=\"movie_overview\">\n              <h3>Overview</h3>\n              <p>{movie.overview}</p>\n            </div>\n            <div>\n              <p>Genres</p>\n              {/* <p>{movie.genres}</p> */}\n            </div>\n          </div>\n        )}\n        <hr />\n        <div>\n          <h2>Additional Information</h2>\n          <Link to={`/movies/${movieId}/reviews`}>\n            <p>Reviews</p>\n          </Link>\n\n          <Link to={`/movies/${movieId}/cast`}>\n            <p>Cast</p>\n          </Link>\n          <hr />\n          <Outlet />\n          {/* <Link to={<Reviews />}>Review</Link> */}\n          {/* <Reviews /> */}\n          {/* <Link to={`/movies/${movieId}/reviews`}>Reviews</Link> */}\n          {/* <Reviews /> */}\n        </div>\n        <hr />\n      </Container>\n    </>\n  );\n}\n","import axios from 'axios';\n\n// https://api.themoviedb.org/3/movie/550?api_key=e744dd987f832ad945563dbad49387aa\n\nconst API_KEY = 'e744dd987f832ad945563dbad49387aa';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nconst END_POINTS = {\n  trending: '/trending/movie/week',\n  querySearch: '/search/movie',\n  movieDetails: '/movie',\n  movieCredits: '/credits',\n  movieReviews: '/reviews',\n};\n\nexport const getMovies = async (page = 1) => {\n  const res = await axios.get(\n    `${END_POINTS.trending}?api_key=${API_KEY}&page=${page}&language=en-US&include_adult=false`\n    // `/trending/movie/week?api_key=${API_KEY}&page=${page}`\n  );\n  // console.log(res.data.results);\n  return res.data.results;\n};\n\n//  https://api.themoviedb.org/3/search/movie?api_key=<<api_key>>&language=en-US&page=1&include_adult=false\nexport const fetchByQuery = async (query, page = 1) => {\n  const res = await axios.get(\n    `${END_POINTS.querySearch}?api_key=${API_KEY}&page=${page}&query=${query}&language=en-US&include_adult=false`\n  );\n  console.log(res.data.results);\n  return res.data.results;\n};\n\n// https://api.themoviedb.org/3/movie/{movie_id}?api_key=<<api_key>>&language=en-US\nexport const fetchMoviesDetails = async id => {\n  // console.log(id);\n  const res = await axios.get(\n    `${END_POINTS.movieDetails}/${id}?api_key=${API_KEY}&language=en-US`\n  );\n  // console.log(res.data.results);\n  // console.log(res.data);\n  return res.data;\n};\n\n// https://api.themoviedb.org/3/movie/{movie_id}/credits?api_key=<<api_key>>&language=en-US\nexport const fetchMoviesCredits = async (id = 11) => {\n  const res = await axios.get(\n    // `/movie/${id}${END_POINTS.movieCredits}?api_key=${API_KEY}&language=en-US`\n    `/movie/${id}${END_POINTS.movieCredits}?api_key=${API_KEY}&language=en-US`\n  );\n  console.log(res);\n  return res.data.cast;\n};\n\nfetchMoviesCredits(11);\n\n// https://api.themoviedb.org/3/movie/{movie_id}/reviews?api_key=<<api_key>>&language=en-US&page=1\n\nexport const fetchMoviesReviews = async (id, page = 1) => {\n  const res = await axios.get(\n    `/movie/${id}${END_POINTS.movieReviews}?api_key=${API_KEY}&language=en-US&page=${page}`\n    // `/movie/${id}${END_POINTS.movieReviews}?api_key=${API_KEY}&language=en-US&page=${page}`\n  );\n  console.log(res.data.results);\n  return res.data.results;\n};\n\n// fetchMoviesReviews(11);\n\n// export const normalizeQuery = query =>\n//   query.toLowerCase().trim().split(' ').join('+');\n\n// export const normalizeMovieDetails = data => ({\n//   ...data,\n//   poster_path: data.poster_path\n//     ? `https://image.tmdb.org/t/p/w500/${data.poster_path}`\n//     : notFoundImageurl,\n// });\n// Реалізація на fetch\n// const BASE_URL = '';\n\n// async function fetchWithErrorHandling(url = '', config = {}) {\n//   const response = await fetch(url, config);\n//   return response.ok\n//     ? await response.json()\n//     : Promise.reject(new Error('The movie not found'));\n// }\n\n// export function fetchTrendingMovies() {\n//   return fetchWithErrorHandling(`${BASE_URL}/trending/get-trending`);\n// }\n\n// export function fetchByQuery() {\n//   return fetchWithErrorHandling(`${BASE_URL}/search/search-movies`);\n// }\n\n// datails, credits, reviews\n// export function fetchMoviesDetails() {}\n"],"names":["Container","children","className","styles","MovieDetailsPage","movieId","useParams","useState","movie","setMovie","console","log","useEffect","fetchMoviesDetails","then","res","src","poster_path","alt","title","Date","release_date","getFullYear","popularity","overview","to","API_KEY","axios","END_POINTS","getMovies","page","data","results","fetchByQuery","query","id","fetchMoviesCredits","cast","fetchMoviesReviews"],"sourceRoot":""}