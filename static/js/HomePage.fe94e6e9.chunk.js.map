{"version":3,"file":"static/js/HomePage.fe94e6e9.chunk.js","mappings":"sQAEe,SAASA,IACtB,OACE,yDAC6B,SAAC,KAAD,CAAMC,GAAG,IAAT,uBAA8B,OCGhD,SAASC,IACtB,OAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAA8BJ,EAAAA,EAAAA,WAAS,GAAvC,eAAOK,EAAP,KAAgBC,EAAhB,MAOAC,EAAAA,EAAAA,YAAU,WAEND,GAAW,IACXE,EAAAA,EAAAA,MACGC,MAAK,SAAAC,GACJR,EAAUQ,MAGXC,OAAM,SAAAR,GACLC,EAAS,kCACTQ,QAAQC,IAAIV,MAEbW,SAAQ,kBAAMR,GAAW,QAG7B,IAOH,IAAMS,GAAcV,IAAYJ,EAAOe,OACvC,OACE,+BACE,UAACC,EAAA,EAAD,YACE,SAAC,IAAD,CAAaC,KAAM,oBAElBb,GAAW,cACXU,IAAc,SAAClB,EAAD,IACdM,IAAS,yBAAMA,IACfF,IAAU,SAACkB,EAAA,EAAD,CAAWlB,OAAQA,W,qDChDtC,MAAwB,2B,SCCT,SAASmB,EAAT,GAAgC,IAATF,EAAQ,EAARA,KACpC,OAAO,eAAIG,UAAWC,EAAf,SAAyBJ,M,sDCsBlC,IAtBkB,SAAC,GAAgB,IAAdjB,EAAa,EAAbA,OACbsB,GAAWC,EAAAA,EAAAA,MAEjB,OADAZ,QAAQC,IAAIU,EAASE,WAEnB,+BACE,wBACGxB,EAAOyB,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,eAAP,OACV,yBACE,SAAC,KAAD,CAAM9B,GAAE,kBAAa6B,GAAME,MAAO,CAAEC,KAAMP,EAASE,UAAnD,UAEE,wBAAKG,OAHAD,Y,0MCNbI,EAAU,mCAChBC,IAAAA,SAAAA,QAAyB,+BAEzB,IAAMC,EACM,uBADNA,EAES,gBAFTA,EAGU,SAHVA,EAIU,WAJVA,EAKU,WAGHzB,EAAS,mCAAG,yGAAO0B,EAAP,+BAAc,EAAd,SACLF,IAAAA,IAAA,UACbC,EADa,oBACkBF,EADlB,iBACkCG,EADlC,wCADK,cACjBC,EADiB,yBAMhBA,EAAIC,KAAK1B,SANO,2CAAH,qDAUT2B,EAAY,mCAAG,WAAOC,GAAP,4FAAcJ,EAAd,+BAAqB,EAArB,SACRF,IAAAA,IAAA,UACbC,EADa,oBACqBF,EADrB,iBACqCG,EADrC,kBACmDI,EADnD,wCADQ,cACpBH,EADoB,OAI1BvB,QAAQC,IAAIsB,EAAIC,KAAK1B,SAJK,kBAKnByB,EAAIC,KAAK1B,SALU,2CAAH,sDASZ6B,EAAkB,mCAAG,WAAMZ,GAAN,uFAEdK,IAAAA,IAAA,UACbC,EADa,YACcN,EADd,oBAC4BI,EAD5B,oBAFc,cAE1BI,EAF0B,yBAOzBA,EAAIC,MAPqB,2CAAH,sDAWlBI,EAAkB,mCAAG,WAAMb,GAAN,uFACdK,IAAAA,IAAA,iBAENL,GAFM,OAEDM,EAFC,oBAEkCF,EAFlC,oBADc,cAC1BI,EAD0B,yBAMzBA,EAAIC,KAAKK,MANgB,2CAAH,sDAalBC,EAAkB,mCAAG,WAAOf,GAAP,4FAAWO,EAAX,+BAAkB,EAAlB,SACdF,IAAAA,IAAA,iBACNL,GADM,OACDM,EADC,oBACkCF,EADlC,gCACiEG,IAFnD,cAC1BC,EAD0B,OAKhCvB,QAAQC,IAAIsB,EAAIC,KAAK1B,SALW,kBAMzByB,EAAIC,KAAK1B,SANgB,2CAAH","sources":["ui/NotFoundView.jsx","components/HomePage/HomePage.js","webpack://goit-react-hw-05-movies/./src/components/Pageheading/PageHeading.module.css?fc51","components/Pageheading/Pageheading.js","components/TrendingMovies/MovieList.jsx","services/movies-api.js"],"sourcesContent":["import { Link } from 'react-router-dom';\n\nexport default function NotFoundView() {\n  return (\n    <h1>\n      Page is not found :( Go to <Link to=\"/\">Home page</Link>{' '}\n    </h1>\n  );\n}\n","// import SearchBar from 'components/MoviesPage/MoviesPage';\nimport Container from 'components/Container/Container';\nimport PageHeading from 'components/Pageheading/Pageheading';\nimport MovieList from 'components/TrendingMovies/MovieList';\nimport { useEffect, useState } from 'react';\nimport { getMovies } from 'services/movies-api';\nimport NotFoundView from 'ui/NotFoundView';\n\nexport default function GetTrendingMovies() {\n  const [movies, setMovies] = useState([]);\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(false);\n  // const [query, setQuery] = useState('');\n\n  // const onLoadBtnClick = () => {\n  //   setPage(prevPage => prevPage + 1);\n  // };\n\n  useEffect(() => {\n    const fetchTrendingMovies = () => {\n      setLoading(true);\n      getMovies()\n        .then(results => {\n          setMovies(results);\n          // setMovies(prevState => [...prevState, ...results]);\n        })\n        .catch(error => {\n          setError('Ooops. Something went wrong...');\n          console.log(error);\n        })\n        .finally(() => setLoading(false));\n    };\n    fetchTrendingMovies();\n  }, []);\n\n  // const handleFormSubmit = () => {\n  //   setQuery(query);\n  //   setPage(1);\n  //   setMovies([0]);\n  // };\n  const isNotFound = !loading && !movies.length;\n  return (\n    <>\n      <Container>\n        <PageHeading text={'Trending Movies'}></PageHeading>\n        {/* <SearchBar onSubmit={handleFormSubmit} /> */}\n        {loading && 'Loading ...'}\n        {isNotFound && <NotFoundView />}\n        {error && <div>{error}</div>}\n        {movies && <MovieList movies={movies} />}\n      </Container>\n    </>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"title\":\"PageHeading_title__whdE-\"};","import s from './PageHeading.module.css';\n\nexport default function PageHeading({ text }) {\n  return <h1 className={s.title}>{text}</h1>;\n}\n","import PropTypes from 'prop-types';\nimport { Link, useLocation } from 'react-router-dom';\n\nconst MovieList = ({ movies }) => {\n  const location = useLocation();\n  console.log(location.pathname);\n  return (\n    <>\n      <ul>\n        {movies.map(({ id, original_title }) => (\n          <li key={id}>\n            <Link to={`/movies/${id}`} state={{ from: location.pathname }}>\n              {/* <Link to={`${id}`}> */}\n              <h3>{original_title}</h3>\n            </Link>\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n};\n\nMovieList.propTypes = {\n  movies: PropTypes.arrayOf(PropTypes.shape()).isRequired,\n};\nexport default MovieList;\n","import axios from 'axios';\n\n// https://api.themoviedb.org/3/movie/550?api_key=e744dd987f832ad945563dbad49387aa\n\nconst API_KEY = 'e744dd987f832ad945563dbad49387aa';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nconst END_POINTS = {\n  trending: '/trending/movie/week',\n  querySearch: '/search/movie',\n  movieDetails: '/movie',\n  movieCredits: '/credits',\n  movieReviews: '/reviews',\n};\n\nexport const getMovies = async (page = 1) => {\n  const res = await axios.get(\n    `${END_POINTS.trending}?api_key=${API_KEY}&page=${page}&language=en-US&include_adult=false`\n    // `/trending/movie/week?api_key=${API_KEY}&page=${page}`\n  );\n  // console.log(res.data.results);\n  return res.data.results;\n};\n\n//  https://api.themoviedb.org/3/search/movie?api_key=<<api_key>>&language=en-US&page=1&include_adult=false\nexport const fetchByQuery = async (query, page = 1) => {\n  const res = await axios.get(\n    `${END_POINTS.querySearch}?api_key=${API_KEY}&page=${page}&query=${query}&language=en-US&include_adult=false`\n  );\n  console.log(res.data.results);\n  return res.data.results;\n};\n\n// https://api.themoviedb.org/3/movie/{movie_id}?api_key=<<api_key>>&language=en-US\nexport const fetchMoviesDetails = async id => {\n  // console.log(id);\n  const res = await axios.get(\n    `${END_POINTS.movieDetails}/${id}?api_key=${API_KEY}&language=en-US`\n  );\n  // console.log(res.data.results);\n  // console.log(res.data);\n  return res.data;\n};\n\n// https://api.themoviedb.org/3/movie/{movie_id}/credits?api_key=<<api_key>>&language=en-US\nexport const fetchMoviesCredits = async id => {\n  const res = await axios.get(\n    // `/movie/${id}${END_POINTS.movieCredits}?api_key=${API_KEY}&language=en-US`\n    `/movie/${id}${END_POINTS.movieCredits}?api_key=${API_KEY}&language=en-US`\n  );\n  // console.log(res);\n  return res.data.cast;\n};\n\n// fetchMoviesCredits(11);\n\n// https://api.themoviedb.org/3/movie/{movie_id}/reviews?api_key=<<api_key>>&language=en-US&page=1\n\nexport const fetchMoviesReviews = async (id, page = 1) => {\n  const res = await axios.get(\n    `/movie/${id}${END_POINTS.movieReviews}?api_key=${API_KEY}&language=en-US&page=${page}`\n    // `/movie/${id}${END_POINTS.movieReviews}?api_key=${API_KEY}&language=en-US&page=${page}`\n  );\n  console.log(res.data.results);\n  return res.data.results;\n};\n\n// fetchMoviesReviews(11);\n\n// export const normalizeQuery = query =>\n//   query.toLowerCase().trim().split(' ').join('+');\n\n// export const normalizeMovieDetails = data => ({\n//   ...data,\n//   poster_path: data.poster_path\n//     ? `https://image.tmdb.org/t/p/w500/${data.poster_path}`\n//     : notFoundImageurl,\n// });\n// Реалізація на fetch\n// const BASE_URL = '';\n\n// async function fetchWithErrorHandling(url = '', config = {}) {\n//   const response = await fetch(url, config);\n//   return response.ok\n//     ? await response.json()\n//     : Promise.reject(new Error('The movie not found'));\n// }\n\n// export function fetchTrendingMovies() {\n//   return fetchWithErrorHandling(`${BASE_URL}/trending/get-trending`);\n// }\n\n// export function fetchByQuery() {\n//   return fetchWithErrorHandling(`${BASE_URL}/search/search-movies`);\n// }\n\n// datails, credits, reviews\n// export function fetchMoviesDetails() {}\n"],"names":["NotFoundView","to","GetTrendingMovies","useState","movies","setMovies","error","setError","loading","setLoading","useEffect","getMovies","then","results","catch","console","log","finally","isNotFound","length","Container","text","MovieList","PageHeading","className","s","location","useLocation","pathname","map","id","original_title","state","from","API_KEY","axios","END_POINTS","page","res","data","fetchByQuery","query","fetchMoviesDetails","fetchMoviesCredits","cast","fetchMoviesReviews"],"sourceRoot":""}